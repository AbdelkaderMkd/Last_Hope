<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialisé enemie

dir = -1;
movespeed= 1;
grav = 0.2;
hsp=0;
vsp=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movement

hsp = dir * movespeed;
vsp+= grav;

///////// system colision 

//horizonatl colision

// avec mur
if(place_meeting(x+hsp,y,obj_mur)){

while(!place_meeting(x+sign(hsp),y,obj_mur)){x+=sign(hsp); }
hsp=0;
dir *= -1;

}
// avec sol (coin)
if(place_meeting(x+hsp,y,obj_sol)){

while(!place_meeting(x+sign(hsp),y,obj_sol)){x+=sign(hsp); }
hsp=0;
dir*=-1;

}
//mouvement horizontal


//vertical colision

//avec mur (coin)
 if(place_meeting(x,y+vsp,obj_mur)){

while(!place_meeting(x,y+sign(vsp),obj_mur)){y+=sign(vsp); }
vsp=0;

}
//avec sol
if(place_meeting(x,y+vsp,obj_sol)){

while(!place_meeting(x,y+sign(vsp),obj_sol)){y+=sign(vsp); }
vsp=0;

}
// mouvement vertical
y+=vsp;
 /////////////////////////////////////////
 
 ///////// system de limitation pour les enmie

//horizonatl colision

// avec limite invisible_gauche 
if(place_meeting(x+hsp,y,obj_limite_g)){

while(!place_meeting(x+sign(hsp),y,obj_limite_g)){x+=sign(hsp); }
hsp=0;
dir *= -1;

}

//mouvement horizontal inversé


// avec limite invisible 
if(place_meeting(x+hsp,y,obj_limite)){

while(!place_meeting(x+sign(hsp),y,obj_limite)){x+=sign(hsp); }
hsp=0;
dir *= -1;

}

//mouvement horizontal inversé
x+=hsp;







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
