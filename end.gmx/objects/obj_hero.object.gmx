<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialisation
/// gravité
grav= 0.2;
/// pa horizontal
hsp =0;
/////pa vertical
vsp=0;
/// hauteur du jump
jumpspeed=7.5;
/////// vitess de mouvement
movespeed= 4;
////HP
hp=100;
////SCORE
coin=0;

timer=0;
canbehit=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(view_xview[0]+400,view_yview[0]+300,OBJ8OVER)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////Timer
if(canbehit=0) timer ++
if(timer==60) {canbehit=1;timer=0;}
//get player input///////////////////////////

// verifier si right button
key_right = keyboard_check(vk_right);
// verifier si left button
key_left= - keyboard_check(vk_left);
/// verifier si space button
key_jump= keyboard_check_pressed(vk_space);

//react to input//////////////////////////////

// variable ki décide de la direction
move = key_left + key_right;
// definition de la vitess du move
hsp= move * movespeed;
// accéleration when fell down
if(vsp &lt;10) vsp+=grav;

// si on est pas dans le vide en peut faire un saut////////////////////

//pour sol
if(place_meeting(x,y+2,obj_sol)){
// vitess du saut
vsp = key_jump * -jumpspeed;
}
//pour mur
if(place_meeting(x,y+2,obj_mur)){
//vitess du saut
vsp = key_jump * -jumpspeed;
}
//horizonatl colision

// avec mur
if(place_meeting(x+hsp,y,obj_mur)){

while(!place_meeting(x+sign(hsp),y,obj_mur)){x+=sign(hsp); }
hsp=0;

}
// avec sol (coin)
if(place_meeting(x+hsp,y,obj_sol)){

while(!place_meeting(x+sign(hsp),y,obj_sol)){x+=sign(hsp); }
hsp=0;

}
// avec ennemie 1 (-hp)
if(place_meeting(x+hsp,y,obj_enemie_1) &amp;&amp; canbehit){
hp-=25;
obj_score.text_hp-=25;
canbehit=0;
}
// avec ennemie 2 (-hp)
if(place_meeting(x+hsp,y,obj_enemie_2) &amp;&amp; canbehit){
hp-=30;
obj_score.text_hp-=30;
canbehit=0;
}
// avec dmg (-hp)
if(place_meeting(x+hsp,y,obj_dmg) &amp;&amp; canbehit){
hp-=20;
obj_score.text_hp-=20;
canbehit=0;
}
// avec dmg fall (-hp)
if(place_meeting(x,y+vsp,obj_dmg_fall)){
hp-=100;
obj_score.text_hp-=100;
}
// avec bullet (-hp)
if((place_meeting(x+3,y,obj_bullet) &amp;&amp; canbehit)||(place_meeting(x,y+vsp,obj_bullet) &amp;&amp; canbehit)||(place_meeting(x+hsp+3,y,obj_bullet) &amp;&amp; canbehit)){
hp-=10;
obj_score.text_hp-=10;
canbehit=0;
}
//condition de défaite 
if(hp&lt;=0){instance_destroy();}
//mouvement horizontal
x+=hsp;

//vertical colision

//avec mur (coin)
 if(place_meeting(x,y+vsp,obj_mur)){

while(!place_meeting(x,y+sign(vsp),obj_mur)){y+=sign(vsp); }
vsp=0;

}
//avec sol
if(place_meeting(x,y+vsp,obj_sol)){

while(!place_meeting(x,y+sign(vsp),obj_sol)){y+=sign(vsp); }
vsp=0;

}
// mouvement vertical
y+=vsp;

// avec bullet (-hp)



/////////////////////animation///////////////////////////////

// inverser le sense de l'hero
if(move!=0) image_xscale = move;

// when hero meet wal (changing animation)
if(place_meeting(x,y+1,obj_mur))
{
 //if he is moving
 if(move!=0) 
 {
  //selection animation movement
  sprite_index = spr_hero_run; 
 }
 else 
 {
  //selection animation stop
  sprite_index= spr_hero; 
 }
}
else
{
 if(place_meeting(x,y+10,obj_sol))
{
 //if he is moving
 if(move!=0) 
 {
  //selection animation movement
  sprite_index = spr_hero_run; 
 }
 else 
 {
  //selection animation stop
  sprite_index= spr_hero; 
 }
}
else{
 // etat tomber || sauter
 if(vsp &lt;0) 
 {
  // animation hero saut
  sprite_index= spr_hero_jump;
 } 
 else
 { 
  // animation hero chute
  sprite_index = spr_hero_fall;
 }
 // animation stop fell down
 //if(vsp==0){sprite_index=spr_hero;}
 }
}

/*
///whene hero meet sol
if(place_meeting(x,y+5,obj_sol))
{
 //if he is moving
 if(move!=0) 
 {
  //selection animation movement
  sprite_index = spr_hero_run; 
 }
 else 
 {
  //selection animation stop
  sprite_index= spr_hero;
 }
}
else
{
 // etat tomber || sauter
 if(vsp &lt;0) 
 {
  // animation hero saut
  sprite_index= spr_hero_jump;
 } 
 else
 { 
  // animation hero chute
  sprite_index = spr_hero_fall;
 }
 // animation stop fell down
 //if(vsp==0){sprite_index=spr_hero;}
}


*/



// when hero meet wal (changing animation)


//////////////fin animation//////////////////////////


//////// monter | decendre de l'echelle ///////

if(place_meeting(x,y,obj_echel)){

// verifier si up button
key_up = - keyboard_check(vk_up);
// verifier si down button
key_down= keyboard_check(vk_down);


//react to input//////////////////////////////

// variable ki décide de la direction
movet = key_down + key_up;
// definition de la vitess du move
vsp= movet * (movespeed-1);

}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_coin">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>coin+=10;
obj_score.text_coin+=10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_win">
      <action>
        <libid>1</libid>
        <id>321</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_message</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>2</kind>
            <string>You Win !</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
